// Generated by Haxe 3.4.7

#pragma warning disable 109, 114, 219, 429, 168, 162
public class HxXmlAIJT : global::haxe.lang.HxObject {
	
	public HxXmlAIJT(global::haxe.lang.EmptyObject empty) {
	}
	
	
	public HxXmlAIJT() {
		global::HxXmlAIJT.__hx_ctor__HxXmlAIJT(this);
	}
	
	
	public static void __hx_ctor__HxXmlAIJT(global::HxXmlAIJT __hx_this) {
	}
	
	
	public static global::Xml @out;
	
	public static void genOut() {
		global::HxXmlAIJT.@out = global::Xml.createElement("Query");
	}
	
	
	public static void convertArray(global::Array input) {
		global::Xml joinTable = global::Xml.createElement("JT");
		{
			int _g1 = 0;
			int _g = ((int) (global::haxe.lang.Runtime.getField_f(input, "length", 520590566, true)) );
			while (( _g1 < _g )) {
				int i = _g1++;
				global::Xml pk = global::Xml.parse("<jr></jr>").firstElement();
				pk.@set("index", global::Std.@string(i));
				{
					if (( ( pk.nodeType != global::Xml.Document ) && ( pk.nodeType != global::Xml.Element ) )) {
						throw global::haxe.lang.HaxeException.wrap(global::haxe.lang.Runtime.concat("Bad node type, expected Element or Document but found ", global::haxe.lang.Runtime.toString(pk.nodeType)));
					}
					
					global::Xml _this = ((global::Xml) (pk.children[0]) );
					string v = global::Std.@string(input[i]);
					if (( ( _this.nodeType == global::Xml.Document ) || ( _this.nodeType == global::Xml.Element ) )) {
						throw global::haxe.lang.HaxeException.wrap(global::haxe.lang.Runtime.concat("Bad node type, unexpected ", global::haxe.lang.Runtime.toString(_this.nodeType)));
					}
					
					_this.nodeValue = v;
				}
				
				joinTable.addChild(pk);
			}
			
		}
		
		global::Xml xmlData = global::Xml.createElement("XmlData");
		xmlData.addChild(joinTable);
		global::HxXmlAIJT.@out.addChild(xmlData);
	}
	
	
	public static global::Xml run(global::Array input) {
		global::HxXmlAIJT.genOut();
		global::HxXmlAIJT.convertArray(input);
		return global::HxXmlAIJT.@out;
	}
	
	
}


