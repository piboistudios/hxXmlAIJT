// Generated by Haxe 3.4.7
#include <hxcpp.h>

namespace hx {
const char *__hxcpp_all_files[] = {
#ifdef HXCPP_DEBUGGER
"?",
"C:\\HaxeToolkit\\haxe\\std/StringTools.hx",
"C:\\HaxeToolkit\\haxe\\std/Xml.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/EReg.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/Reflect.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/Std.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/StringBuf.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/Sys.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/Type.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/haxe/ds/StringMap.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/sys/io/File.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/sys/io/FileInput.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/sys/io/FileOutput.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/Bytes.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/BytesBuffer.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/Eof.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/Input.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/Output.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/xml/Parser.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/xml/Printer.hx",
"HxXmlAIJT.hx",
"Main.hx",
"fileFactory/CSV.hx",
"fileFactory/Common.hx",
#endif
 0 };

const char *__hxcpp_all_files_fullpath[] = {
#ifdef HXCPP_DEBUGGER
"C:\\Haxe Projects\\hxXmlAIJT\\?",
"C:\\HaxeToolkit\\haxe\\std\\StringTools.hx",
"C:\\HaxeToolkit\\haxe\\std\\Xml.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\EReg.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\Reflect.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\Std.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\StringBuf.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\Sys.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\Type.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\haxe\\ds\\StringMap.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\sys\\io\\File.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\sys\\io\\FileInput.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\sys\\io\\FileOutput.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Eof.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Input.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Printer.hx",
"C:\\Haxe Projects\\hxXmlAIJT\\src\\HxXmlAIJT.hx",
"C:\\Haxe Projects\\hxXmlAIJT\\Main.hx",
"C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx",
"C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\Common.hx",
#endif
 0 };

const char *__hxcpp_all_classes[] = {
#ifdef HXCPP_DEBUGGER
"EReg",
"HxXmlAIJT",
"Main",
"Reflect",
"Std",
"StringBuf",
"StringTools",
"Sys",
"Type",
"Xml",
"fileFactory.CSV",
"fileFactory.Common",
"haxe.ds.StringMap",
"haxe.io.Bytes",
"haxe.io.BytesBuffer",
"haxe.io.Eof",
"haxe.io.Input",
"haxe.io.Output",
"haxe.xml.XmlParserException",
"haxe.xml.Parser",
"haxe.xml.Printer",
"sys.io.File",
"sys.io.FileInput",
"sys.io.FileOutput",
#endif
 0 };
} // namespace hx
void __files__boot() { __hxcpp_set_debugger_info(hx::__hxcpp_all_classes, hx::__hxcpp_all_files_fullpath); }
