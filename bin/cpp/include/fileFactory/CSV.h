// Generated by Haxe 3.4.7
#ifndef INCLUDED_fileFactory_CSV
#define INCLUDED_fileFactory_CSV

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(fileFactory,CSV)

namespace fileFactory{


class HXCPP_CLASS_ATTRIBUTES CSV_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef CSV_obj OBJ_;
		CSV_obj();

	public:
		enum { _hx_ClassId = 0x1da85078 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="fileFactory.CSV")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"fileFactory.CSV"); }

		hx::ObjectPtr< CSV_obj > __new() {
			hx::ObjectPtr< CSV_obj > __this = new CSV_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< CSV_obj > __alloc(hx::Ctx *_hx_ctx) {
			CSV_obj *__this = (CSV_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(CSV_obj), false, "fileFactory.CSV"));
			*(void **)__this = CSV_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~CSV_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("CSV","\xa6","\x1f","\x33","\x00"); }

		static ::cpp::VirtualArray run( ::Dynamic input);
		static ::Dynamic run_dyn();

};

} // end namespace fileFactory

#endif /* INCLUDED_fileFactory_CSV */ 
