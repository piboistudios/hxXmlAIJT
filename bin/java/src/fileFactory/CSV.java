// Generated by Haxe 3.4.7
package fileFactory;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class CSV extends haxe.lang.HxObject
{
	public CSV(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public CSV()
	{
		//line 4 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
		fileFactory.CSV.__hx_ctor_fileFactory_CSV(this);
	}
	
	
	public static void __hx_ctor_fileFactory_CSV(fileFactory.CSV __hx_this)
	{
	}
	
	
	public static haxe.root.Array run(java.lang.Object input)
	{
		//line 7 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
		java.lang.Object _file = null;
		//line 7 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
		haxe.root.Array out = new haxe.root.Array();
		//line 8 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
		sys.io.FileInput file = null;
		//line 9 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
		if (( ((java.lang.Object) (((java.lang.Class) (haxe.root.Type.getClass(haxe.lang.Runtime.toString(input))) )) ) == ((java.lang.Object) (java.lang.String.class) ) )) 
		{
			//line 11 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
			_file = sys.io.File.read(haxe.lang.Runtime.toString(input), null);
			//line 11 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
			file = ((sys.io.FileInput) (_file) );
		}
		
		//line 14 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
		java.lang.String pk = "";
		//line 15 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
		while (true)
		{
			//line 17 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
			java.lang.String tmp = null;
			//line 17 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
			try 
			{
				//line 19 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
				pk = file.readLine();
				//line 17 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
				tmp = pk;
			}
			catch (java.lang.Throwable __temp_catchallException1)
			{
				//line 17 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
				haxe.lang.Exceptions.setException(__temp_catchallException1);
				//line 17 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
				java.lang.Object __temp_catchall2 = __temp_catchallException1;
				//line 17 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
				if (( __temp_catchall2 instanceof haxe.lang.HaxeException )) 
				{
					//line 17 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
					__temp_catchall2 = ((haxe.lang.HaxeException) (__temp_catchallException1) ).obj;
				}
				
				//line 17 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
				if (( __temp_catchall2 instanceof haxe.io.Eof )) 
				{
					//line 17 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
					haxe.io.Eof e = ((haxe.io.Eof) (__temp_catchall2) );
					//line 17 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
					{
						//line 23 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
						pk = fileFactory.Common.EOF;
						//line 17 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
						tmp = pk;
					}
					
				}
				else
				{
					//line 17 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
					throw haxe.lang.HaxeException.wrap(__temp_catchallException1);
				}
				
			}
			
			
			//line 15 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
			if ( ! (( ! (haxe.lang.Runtime.valEq(tmp, fileFactory.Common.EOF)) )) ) 
			{
				//line 15 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
				break;
			}
			
			//line 27 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
			out.push(pk);
		}
		
		//line 29 "C:\\Haxe Projects\\hxXmlAIJT\\src\\fileFactory\\CSV.hx"
		return out;
	}
	
	
}


