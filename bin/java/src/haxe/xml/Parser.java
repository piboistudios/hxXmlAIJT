// Generated by Haxe 3.4.7
package haxe.xml;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Parser extends haxe.lang.HxObject
{
	static
	{
		//line 104 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
		java.lang.Object __temp_stmt1 = null;
		//line 104 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
		{
			//line 105 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
			haxe.ds.StringMap<java.lang.String> h = new haxe.ds.StringMap<java.lang.String>();
			//line 106 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
			h.set("lt", "<");
			//line 107 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
			h.set("gt", ">");
			//line 108 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
			h.set("amp", "&");
			//line 109 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
			h.set("quot", "\"");
			//line 110 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
			h.set("apos", "\'");
			//line 111 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
			__temp_stmt1 = h;
		}
		
		//line 104 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
		haxe.xml.Parser.escapes = ((haxe.ds.StringMap<java.lang.String>) (__temp_stmt1) );
	}
	
	public Parser(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Parser()
	{
		//line 102 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
		haxe.xml.Parser.__hx_ctor_haxe_xml_Parser(this);
	}
	
	
	public static void __hx_ctor_haxe_xml_Parser(haxe.xml.Parser __hx_this)
	{
	}
	
	
	public static haxe.ds.StringMap<java.lang.String> escapes;
	
	public static haxe.root.Xml parse(java.lang.String str, java.lang.Object strict)
	{
		//line 120 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
		boolean __temp_strict1 = ( (haxe.lang.Runtime.eq(strict, null)) ? (false) : (haxe.lang.Runtime.toBool(strict)) );
		//line 121 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
		haxe.root.Xml doc = haxe.root.Xml.createDocument();
		//line 122 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
		haxe.xml.Parser.doParse(str, __temp_strict1, 0, doc);
		//line 123 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
		return doc;
	}
	
	
	public static int doParse(java.lang.String str, boolean strict, java.lang.Object p, haxe.root.Xml parent)
	{
		//line 127 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
		int __temp_p2 = ( (haxe.lang.Runtime.eq(p, null)) ? (0) : (((int) (haxe.lang.Runtime.toInt(p)) )) );
		//line 128 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
		haxe.root.Xml xml = null;
		//line 129 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
		int state = 1;
		//line 130 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
		int next = 1;
		//line 131 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
		java.lang.String aname = null;
		//line 132 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
		int start = 0;
		//line 133 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
		int nsubs = 0;
		//line 134 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
		int nbrackets = 0;
		//line 135 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
		int c = ( (( __temp_p2 < str.length() )) ? (((int) (str.charAt(__temp_p2)) )) : (-1) );
		//line 136 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
		haxe.root.StringBuf buf = new haxe.root.StringBuf();
		//line 138 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
		int escapeNext = 1;
		//line 139 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
		int attrValQuote = -1;
		//line 144 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
		while (( c != -1 ))
		{
			//line 146 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
			switch (state)
			{
				case 0:
				{
					//line 149 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					switch (c)
					{
						case 9:
						case 10:
						case 13:
						case 32:
						{
							//line 151 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							break;
						}
						
						
						default:
						{
							//line 157 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							state = next;
							//line 158 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							continue;
						}
						
					}
					
					//line 149 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					break;
				}
				
				
				case 1:
				{
					//line 161 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					switch (c)
					{
						case 60:
						{
							//line 164 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							state = 0;
							//line 165 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							next = 2;
							//line 163 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							break;
						}
						
						
						default:
						{
							//line 167 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							start = __temp_p2;
							//line 168 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							state = 13;
							//line 169 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							continue;
						}
						
					}
					
					//line 161 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					break;
				}
				
				
				case 2:
				{
					//line 195 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					switch (c)
					{
						case 33:
						{
							//line 198 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							int index = ( __temp_p2 + 1 );
							//line 198 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							if (( (( (( index < str.length() )) ? (((int) (str.charAt(index)) )) : (-1) )) == 91 )) 
							{
								//line 200 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								__temp_p2 += 2;
								//line 201 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								if ( ! (haxe.lang.Runtime.valEq(haxe.lang.StringExt.substr(str, __temp_p2, 6).toUpperCase(), "CDATA[")) ) 
								{
									//line 202 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
									throw haxe.lang.HaxeException.wrap(new haxe.xml.XmlParserException("Expected <![CDATA[", str, __temp_p2));
								}
								
								//line 203 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								__temp_p2 += 5;
								//line 204 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								state = 17;
								//line 205 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								start = ( __temp_p2 + 1 );
							}
							else
							{
								//line 207 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								boolean tmp = false;
								//line 207 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								int index1 = ( __temp_p2 + 1 );
								//line 207 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								if (( (( (( index1 < str.length() )) ? (((int) (str.charAt(index1)) )) : (-1) )) != 68 )) 
								{
									//line 207 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
									int index2 = ( __temp_p2 + 1 );
									//line 207 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
									tmp = ( (( (( index2 < str.length() )) ? (((int) (str.charAt(index2)) )) : (-1) )) == 100 );
								}
								else
								{
									//line 207 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
									tmp = true;
								}
								
								//line 207 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								if (tmp) 
								{
									//line 209 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
									if ( ! (haxe.lang.Runtime.valEq(haxe.lang.StringExt.substr(str, ( __temp_p2 + 2 ), 6).toUpperCase(), "OCTYPE")) ) 
									{
										//line 210 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
										throw haxe.lang.HaxeException.wrap(new haxe.xml.XmlParserException("Expected <!DOCTYPE", str, __temp_p2));
									}
									
									//line 211 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
									__temp_p2 += 8;
									//line 212 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
									state = 16;
									//line 213 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
									start = ( __temp_p2 + 1 );
								}
								else
								{
									//line 215 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
									boolean tmp1 = false;
									//line 215 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
									int index3 = ( __temp_p2 + 1 );
									//line 215 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
									if (( (( (( index3 < str.length() )) ? (((int) (str.charAt(index3)) )) : (-1) )) == 45 )) 
									{
										//line 215 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
										int index4 = ( __temp_p2 + 2 );
										//line 215 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
										tmp1 = ( (( (( index4 < str.length() )) ? (((int) (str.charAt(index4)) )) : (-1) )) != 45 );
									}
									else
									{
										//line 215 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
										tmp1 = true;
									}
									
									//line 215 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
									if (tmp1) 
									{
										//line 216 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
										throw haxe.lang.HaxeException.wrap(new haxe.xml.XmlParserException("Expected <!--", str, __temp_p2));
									}
									else
									{
										//line 219 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
										__temp_p2 += 2;
										//line 220 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
										state = 15;
										//line 221 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
										start = ( __temp_p2 + 1 );
									}
									
								}
								
							}
							
							//line 198 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							break;
						}
						
						
						case 47:
						{
							//line 227 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							if (( parent == null )) 
							{
								//line 228 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								throw haxe.lang.HaxeException.wrap(new haxe.xml.XmlParserException("Expected node name", str, __temp_p2));
							}
							
							//line 229 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							start = ( __temp_p2 + 1 );
							//line 230 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							state = 0;
							//line 231 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							next = 10;
							//line 226 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							break;
						}
						
						
						case 63:
						{
							//line 224 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							state = 14;
							//line 225 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							start = __temp_p2;
							//line 223 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							break;
						}
						
						
						default:
						{
							//line 233 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							state = 3;
							//line 234 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							start = __temp_p2;
							//line 235 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							continue;
						}
						
					}
					
					//line 195 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					break;
				}
				
				
				case 3:
				{
					//line 238 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					if ( ! ((( ( ( ( ( ( ( ( c >= 97 ) && ( c <= 122 ) ) || ( ( c >= 65 ) && ( c <= 90 ) ) ) || ( ( c >= 48 ) && ( c <= 57 ) ) ) || ( c == 58 ) ) || ( c == 46 ) ) || ( c == 95 ) ) || ( c == 45 ) ))) ) 
					{
						//line 240 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						if (( __temp_p2 == start )) 
						{
							//line 241 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							throw haxe.lang.HaxeException.wrap(new haxe.xml.XmlParserException("Expected node name", str, __temp_p2));
						}
						
						//line 242 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						xml = haxe.root.Xml.createElement(haxe.lang.StringExt.substr(str, start, ( __temp_p2 - start )));
						//line 243 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						{
							//line 243 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							parent.addChild(xml);
							//line 243 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							 ++ nsubs;
						}
						
						//line 244 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						state = 0;
						//line 245 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						next = 4;
						//line 246 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						continue;
					}
					
					//line 238 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					break;
				}
				
				
				case 4:
				{
					//line 249 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					switch (c)
					{
						case 47:
						{
							//line 252 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							state = 11;
							//line 252 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							break;
						}
						
						
						case 62:
						{
							//line 254 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							state = 9;
							//line 254 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							break;
						}
						
						
						default:
						{
							//line 256 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							state = 5;
							//line 257 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							start = __temp_p2;
							//line 258 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							continue;
						}
						
					}
					
					//line 249 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					break;
				}
				
				
				case 5:
				{
					//line 261 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					if ( ! ((( ( ( ( ( ( ( ( c >= 97 ) && ( c <= 122 ) ) || ( ( c >= 65 ) && ( c <= 90 ) ) ) || ( ( c >= 48 ) && ( c <= 57 ) ) ) || ( c == 58 ) ) || ( c == 46 ) ) || ( c == 95 ) ) || ( c == 45 ) ))) ) 
					{
						//line 263 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						java.lang.String tmp2 = null;
						//line 264 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						if (( start == __temp_p2 )) 
						{
							//line 265 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							throw haxe.lang.HaxeException.wrap(new haxe.xml.XmlParserException("Expected attribute name", str, __temp_p2));
						}
						
						//line 266 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						tmp2 = haxe.lang.StringExt.substr(str, start, ( __temp_p2 - start ));
						//line 267 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						aname = tmp2;
						//line 268 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						if (xml.exists(aname)) 
						{
							//line 269 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							throw haxe.lang.HaxeException.wrap(new haxe.xml.XmlParserException(( ( "Duplicate attribute [" + aname ) + "]" ), str, __temp_p2));
						}
						
						//line 270 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						state = 0;
						//line 271 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						next = 6;
						//line 272 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						continue;
					}
					
					//line 261 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					break;
				}
				
				
				case 6:
				{
					//line 275 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					switch (c)
					{
						case 61:
						{
							//line 278 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							state = 0;
							//line 279 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							next = 7;
							//line 277 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							break;
						}
						
						
						default:
						{
							//line 281 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							throw haxe.lang.HaxeException.wrap(new haxe.xml.XmlParserException("Expected =", str, __temp_p2));
						}
						
					}
					
					//line 275 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					break;
				}
				
				
				case 7:
				{
					//line 284 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					switch (c)
					{
						case 34:
						case 39:
						{
							//line 287 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							buf = new haxe.root.StringBuf();
							//line 288 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							state = 8;
							//line 289 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							start = ( __temp_p2 + 1 );
							//line 290 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							attrValQuote = c;
							//line 286 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							break;
						}
						
						
						default:
						{
							//line 292 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							throw haxe.lang.HaxeException.wrap(new haxe.xml.XmlParserException("Expected \"", str, __temp_p2));
						}
						
					}
					
					//line 284 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					break;
				}
				
				
				case 8:
				{
					//line 295 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					switch (c)
					{
						case 38:
						{
							//line 297 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							buf.addSub(str, start, ( __temp_p2 - start ));
							//line 298 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							state = 18;
							//line 299 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							escapeNext = 8;
							//line 300 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							start = ( __temp_p2 + 1 );
							//line 296 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							break;
						}
						
						
						case 60:
						case 62:
						{
							//line 301 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							if (strict) 
							{
								//line 303 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								throw haxe.lang.HaxeException.wrap(new haxe.xml.XmlParserException(( ( "Invalid unescaped " + Character.toString((char) c) ) + " in attribute value" ), str, __temp_p2));
							}
							else
							{
								//line 304 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								if (( c == attrValQuote )) 
								{
									//line 305 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
									buf.addSub(str, start, ( __temp_p2 - start ));
									//line 306 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
									java.lang.String val = buf.toString();
									//line 307 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
									buf = new haxe.root.StringBuf();
									//line 308 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
									xml.set(aname, val);
									//line 309 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
									state = 0;
									//line 310 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
									next = 4;
								}
								
							}
							
							//line 301 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							break;
						}
						
						
						default:
						{
							//line 304 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							if (( c == attrValQuote )) 
							{
								//line 305 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								buf.addSub(str, start, ( __temp_p2 - start ));
								//line 306 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								java.lang.String val1 = buf.toString();
								//line 307 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								buf = new haxe.root.StringBuf();
								//line 308 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								xml.set(aname, val1);
								//line 309 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								state = 0;
								//line 310 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								next = 4;
							}
							
							//line 304 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							break;
						}
						
					}
					
					//line 295 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					break;
				}
				
				
				case 9:
				{
					//line 313 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					__temp_p2 = haxe.xml.Parser.doParse(str, strict, __temp_p2, xml);
					//line 314 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					start = __temp_p2;
					//line 315 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					state = 1;
					//line 312 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					break;
				}
				
				
				case 10:
				{
					//line 335 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					if ( ! ((( ( ( ( ( ( ( ( c >= 97 ) && ( c <= 122 ) ) || ( ( c >= 65 ) && ( c <= 90 ) ) ) || ( ( c >= 48 ) && ( c <= 57 ) ) ) || ( c == 58 ) ) || ( c == 46 ) ) || ( c == 95 ) ) || ( c == 45 ) ))) ) 
					{
						//line 337 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						if (( start == __temp_p2 )) 
						{
							//line 338 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							throw haxe.lang.HaxeException.wrap(new haxe.xml.XmlParserException("Expected node name", str, __temp_p2));
						}
						
						//line 340 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						java.lang.String v = haxe.lang.StringExt.substr(str, start, ( __temp_p2 - start ));
						//line 341 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						if (( parent.nodeType != haxe.root.Xml.Element )) 
						{
							//line 341 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							throw haxe.lang.HaxeException.wrap(( "Bad node type, expected Element but found " + parent.nodeType ));
						}
						
						//line 341 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						if ( ! (haxe.lang.Runtime.valEq(v, parent.nodeName)) ) 
						{
							//line 342 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							if (( parent.nodeType != haxe.root.Xml.Element )) 
							{
								//line 342 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								throw haxe.lang.HaxeException.wrap(( "Bad node type, expected Element but found " + parent.nodeType ));
							}
							
							//line 342 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							throw haxe.lang.HaxeException.wrap(new haxe.xml.XmlParserException(( ( "Expected </" + parent.nodeName ) + ">" ), str, __temp_p2));
						}
						
						//line 344 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						state = 0;
						//line 345 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						next = 12;
						//line 346 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						continue;
					}
					
					//line 335 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					break;
				}
				
				
				case 11:
				{
					//line 317 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					switch (c)
					{
						case 62:
						{
							//line 320 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							state = 1;
							//line 320 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							break;
						}
						
						
						default:
						{
							//line 322 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							throw haxe.lang.HaxeException.wrap(new haxe.xml.XmlParserException("Expected >", str, __temp_p2));
						}
						
					}
					
					//line 317 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					break;
				}
				
				
				case 12:
				{
					//line 325 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					switch (c)
					{
						case 62:
						{
							//line 328 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							if (( nsubs == 0 )) 
							{
								//line 329 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								parent.addChild(haxe.root.Xml.createPCData(""));
							}
							
							//line 330 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							return __temp_p2;
						}
						
						
						default:
						{
							//line 332 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							throw haxe.lang.HaxeException.wrap(new haxe.xml.XmlParserException("Expected >", str, __temp_p2));
						}
						
					}
					
				}
				
				
				case 13:
				{
					//line 172 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					if (( c == 60 )) 
					{
						//line 174 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						buf.addSub(str, start, ( __temp_p2 - start ));
						//line 175 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						haxe.root.Xml child = haxe.root.Xml.createPCData(buf.toString());
						//line 176 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						buf = new haxe.root.StringBuf();
						//line 177 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						{
							//line 177 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							parent.addChild(child);
							//line 177 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							 ++ nsubs;
						}
						
						//line 178 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						state = 0;
						//line 179 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						next = 2;
					}
					else
					{
						//line 180 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						if (( c == 38 )) 
						{
							//line 181 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							buf.addSub(str, start, ( __temp_p2 - start ));
							//line 182 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							state = 18;
							//line 183 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							escapeNext = 13;
							//line 184 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							start = ( __temp_p2 + 1 );
						}
						
					}
					
					//line 172 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					break;
				}
				
				
				case 14:
				{
					//line 366 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					boolean tmp3 = false;
					//line 366 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					if (( c == 63 )) 
					{
						//line 366 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						int index5 = ( __temp_p2 + 1 );
						//line 366 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						tmp3 = ( (( (( index5 < str.length() )) ? (((int) (str.charAt(index5)) )) : (-1) )) == 62 );
					}
					else
					{
						//line 366 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						tmp3 = false;
					}
					
					//line 366 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					if (tmp3) 
					{
						//line 368 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						 ++ __temp_p2;
						//line 369 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						java.lang.String str1 = haxe.lang.StringExt.substr(str, ( start + 1 ), ( ( __temp_p2 - start ) - 2 ));
						//line 370 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						{
							//line 370 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							parent.addChild(haxe.root.Xml.createProcessingInstruction(str1));
							//line 370 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							 ++ nsubs;
						}
						
						//line 371 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						state = 1;
					}
					
					//line 366 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					break;
				}
				
				
				case 15:
				{
					//line 349 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					boolean tmp4 = false;
					//line 349 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					boolean tmp5 = false;
					//line 349 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					if (( c == 45 )) 
					{
						//line 349 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						int index6 = ( __temp_p2 + 1 );
						//line 349 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						tmp5 = ( (( (( index6 < str.length() )) ? (((int) (str.charAt(index6)) )) : (-1) )) == 45 );
					}
					else
					{
						//line 349 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						tmp5 = false;
					}
					
					//line 349 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					if (tmp5) 
					{
						//line 349 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						int index7 = ( __temp_p2 + 2 );
						//line 349 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						tmp4 = ( (( (( index7 < str.length() )) ? (((int) (str.charAt(index7)) )) : (-1) )) == 62 );
					}
					else
					{
						//line 349 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						tmp4 = false;
					}
					
					//line 349 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					if (tmp4) 
					{
						//line 351 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						{
							//line 351 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							parent.addChild(haxe.root.Xml.createComment(haxe.lang.StringExt.substr(str, start, ( __temp_p2 - start ))));
							//line 351 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							 ++ nsubs;
						}
						
						//line 352 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						__temp_p2 += 2;
						//line 353 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						state = 1;
					}
					
					//line 349 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					break;
				}
				
				
				case 16:
				{
					//line 356 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					if (( c == 91 )) 
					{
						//line 357 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						 ++ nbrackets;
					}
					else
					{
						//line 358 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						if (( c == 93 )) 
						{
							//line 359 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							 -- nbrackets;
						}
						else
						{
							//line 360 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							if (( ( c == 62 ) && ( nbrackets == 0 ) )) 
							{
								//line 362 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								{
									//line 362 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
									parent.addChild(haxe.root.Xml.createDocType(haxe.lang.StringExt.substr(str, start, ( __temp_p2 - start ))));
									//line 362 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
									 ++ nsubs;
								}
								
								//line 363 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								state = 1;
							}
							
						}
						
					}
					
					//line 356 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					break;
				}
				
				
				case 17:
				{
					//line 187 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					boolean tmp6 = false;
					//line 187 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					boolean tmp7 = false;
					//line 187 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					if (( c == 93 )) 
					{
						//line 187 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						int index8 = ( __temp_p2 + 1 );
						//line 187 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						tmp7 = ( (( (( index8 < str.length() )) ? (((int) (str.charAt(index8)) )) : (-1) )) == 93 );
					}
					else
					{
						//line 187 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						tmp7 = false;
					}
					
					//line 187 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					if (tmp7) 
					{
						//line 187 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						int index9 = ( __temp_p2 + 2 );
						//line 187 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						tmp6 = ( (( (( index9 < str.length() )) ? (((int) (str.charAt(index9)) )) : (-1) )) == 62 );
					}
					else
					{
						//line 187 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						tmp6 = false;
					}
					
					//line 187 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					if (tmp6) 
					{
						//line 189 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						haxe.root.Xml child1 = haxe.root.Xml.createCData(haxe.lang.StringExt.substr(str, start, ( __temp_p2 - start )));
						//line 190 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						{
							//line 190 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							parent.addChild(child1);
							//line 190 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							 ++ nsubs;
						}
						
						//line 191 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						__temp_p2 += 2;
						//line 192 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						state = 1;
					}
					
					//line 187 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					break;
				}
				
				
				case 18:
				{
					//line 374 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					if (( c == 59 )) 
					{
						//line 376 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						java.lang.String s = haxe.lang.StringExt.substr(str, start, ( __temp_p2 - start ));
						//line 377 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						if (( (( (( 0 < s.length() )) ? (((int) (s.charAt(0)) )) : (-1) )) == 35 )) 
						{
							//line 378 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							java.lang.Object c1 = ( (( (( (( 1 < s.length() )) ? (((int) (s.charAt(1)) )) : (-1) )) == 120 )) ? (haxe.root.Std.parseInt(( "0" + haxe.lang.StringExt.substr(s, 1, ( s.length() - 1 )) ))) : (haxe.root.Std.parseInt(haxe.lang.StringExt.substr(s, 1, ( s.length() - 1 )))) );
							//line 400 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							buf.addChar(((int) (haxe.lang.Runtime.toInt(c1)) ));
						}
						else
						{
							//line 401 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							if ( ! (haxe.xml.Parser.escapes.exists(s)) ) 
							{
								//line 402 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								if (strict) 
								{
									//line 403 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
									throw haxe.lang.HaxeException.wrap(new haxe.xml.XmlParserException(( "Undefined entity: " + s ), str, __temp_p2));
								}
								
								//line 404 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								buf.add(haxe.lang.Runtime.toString(( ( "&" + s ) + ";" )));
							}
							else
							{
								//line 406 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								buf.add(haxe.lang.Runtime.toString(haxe.xml.Parser.escapes.get(s)));
							}
							
						}
						
						//line 408 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						start = ( __temp_p2 + 1 );
						//line 409 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						state = escapeNext;
					}
					else
					{
						//line 410 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
						if ((  ! ((( ( ( ( ( ( ( ( c >= 97 ) && ( c <= 122 ) ) || ( ( c >= 65 ) && ( c <= 90 ) ) ) || ( ( c >= 48 ) && ( c <= 57 ) ) ) || ( c == 58 ) ) || ( c == 46 ) ) || ( c == 95 ) ) || ( c == 45 ) )))  && ( c != 35 ) )) 
						{
							//line 411 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							if (strict) 
							{
								//line 412 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
								throw haxe.lang.HaxeException.wrap(new haxe.xml.XmlParserException(( "Invalid character in entity: " + Character.toString((char) c) ), str, __temp_p2));
							}
							
							//line 413 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							buf.addChar(38);
							//line 414 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							buf.addSub(str, start, ( __temp_p2 - start ));
							//line 416 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							start = __temp_p2--;
							//line 417 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
							state = escapeNext;
						}
						
					}
					
					//line 374 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					break;
				}
				
				
			}
			
			//line 420 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
			int index10 =  ++ __temp_p2;
			//line 420 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
			if (( index10 < str.length() )) 
			{
				//line 420 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
				c = ((int) (str.charAt(index10)) );
			}
			else
			{
				//line 420 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
				c = -1;
			}
			
		}
		
		//line 423 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
		if (( state == 1 )) 
		{
			//line 425 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
			start = __temp_p2;
			//line 426 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
			state = 13;
		}
		
		//line 429 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
		if (( state == 13 )) 
		{
			//line 431 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
			if (( ( __temp_p2 != start ) || ( nsubs == 0 ) )) 
			{
				//line 432 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
				buf.addSub(str, start, ( __temp_p2 - start ));
				//line 433 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
				{
					//line 433 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					parent.addChild(haxe.root.Xml.createPCData(buf.toString()));
					//line 433 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
					 ++ nsubs;
				}
				
			}
			
			//line 435 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
			return __temp_p2;
		}
		
		//line 438 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
		if (( (  ! (strict)  && ( state == 18 ) ) && ( escapeNext == 13 ) )) 
		{
			//line 439 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
			buf.addChar(38);
			//line 440 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
			buf.addSub(str, start, ( __temp_p2 - start ));
			//line 441 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
			{
				//line 441 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
				parent.addChild(haxe.root.Xml.createPCData(buf.toString()));
				//line 441 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
				 ++ nsubs;
			}
			
			//line 442 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
			return __temp_p2;
		}
		
		//line 445 "C:\\HaxeToolkit\\haxe\\std\\haxe\\xml\\Parser.hx"
		throw haxe.lang.HaxeException.wrap(new haxe.xml.XmlParserException("Unexpected end", str, __temp_p2));
	}
	
	
}


