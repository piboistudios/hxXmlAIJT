// Generated by Haxe 3.4.7
package haxe.root;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Type extends haxe.lang.HxObject
{
	public Type(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Type()
	{
		//line 39 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
		haxe.root.Type.__hx_ctor__Type(this);
	}
	
	
	public static void __hx_ctor__Type(haxe.root.Type __hx_this)
	{
	}
	
	
	public static <T> java.lang.Class getClass(T o)
	{
		//line 43 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
		if (( ( ( o == null ) || ( o instanceof haxe.lang.DynamicObject ) ) || ( o instanceof java.lang.Class ) )) 
		{
			//line 44 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
			return null;
		}
		
		//line 46 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
		return ((java.lang.Class) (((java.lang.Class) (((java.lang.Class) (o.getClass()) )) )) );
	}
	
	
	public static java.lang.Class getEnum(java.lang.Object o)
	{
		//line 51 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
		if (( ( o instanceof java.lang.Enum ) || ( o instanceof haxe.lang.Enum ) )) 
		{
			//line 52 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
			return o.getClass();
		}
		
		//line 54 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
		return null;
	}
	
	
	public static java.lang.String getClassName(java.lang.Class c)
	{
		//line 68 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
		java.lang.Class c1 = ((java.lang.Class) (c) );
		//line 69 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
		java.lang.String name = c1.getName();
		//line 70 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
		if (name.startsWith("haxe.root.")) 
		{
			//line 71 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
			return haxe.lang.StringExt.substr(name, 10, null);
		}
		
		//line 72 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
		if (name.startsWith("java.lang")) 
		{
			//line 73 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
			name = haxe.lang.StringExt.substr(name, 10, null);
		}
		
		//line 75 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
		{
			//line 75 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
			java.lang.String __temp_svar1 = (name);
			//line 75 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
			int __temp_hash3 = __temp_svar1.hashCode();
			//line 75 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
			boolean __temp_executeDef2 = true;
			//line 75 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
			switch (__temp_hash3)
			{
				case -1325958191:
				case 2052876273:
				{
					//line 75 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
					if (( (( ( __temp_hash3 == -1325958191 ) && __temp_svar1.equals("double") )) || __temp_svar1.equals("Double") )) 
					{
						//line 75 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
						__temp_executeDef2 = false;
						//line 78 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
						return "Float";
					}
					
					//line 75 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
					break;
				}
				
				
				case -1939501217:
				{
					//line 75 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
					if (__temp_svar1.equals("Object")) 
					{
						//line 75 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
						__temp_executeDef2 = false;
						//line 79 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
						return "Dynamic";
					}
					
					//line 75 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
					break;
				}
				
				
				case 104431:
				case -672261858:
				{
					//line 75 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
					if (( (( ( __temp_hash3 == 104431 ) && __temp_svar1.equals("int") )) || __temp_svar1.equals("Integer") )) 
					{
						//line 75 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
						__temp_executeDef2 = false;
						//line 77 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
						return "Int";
					}
					
					//line 75 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
					break;
				}
				
				
			}
			
			//line 80 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
			if (__temp_executeDef2) 
			{
				//line 80 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
				return name;
			}
			else
			{
				//line 80 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\Type.hx"
				throw null;
			}
			
		}
		
	}
	
	
	public static haxe.root.Array<java.lang.String> getClassFields(java.lang.Class c)
	{
		
		Array<String> ret = new Array<String>();
		if (c == java.lang.String.class)
		{
			ret.push("fromCharCode");
			return ret;
		}

		for (java.lang.reflect.Field f : c.getDeclaredFields())
		{
			java.lang.String fname = f.getName();
			if (java.lang.reflect.Modifier.isStatic(f.getModifiers()) && !fname.startsWith("__hx_"))
			ret.push(fname);
		}

		for (java.lang.reflect.Method m : c.getDeclaredMethods())
		{
			if (m.getDeclaringClass() == java.lang.Object.class)
				continue;
			java.lang.String mname = m.getName();
			if (java.lang.reflect.Modifier.isStatic(m.getModifiers()) && !mname.startsWith("__hx_"))
				ret.push(mname);
		}

		return ret;
	
	}
	
	
	public static <T> boolean enumEq(T a, T b)
	{
		
			if (a instanceof haxe.lang.Enum)
				return a.equals(b);
			else
				return haxe.lang.Runtime.eq(a, b);
	
	}
	
	
}


